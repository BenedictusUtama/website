{"version":3,"sources":["insta_logo.svg","slack_logo.svg","fb_logo.png","mail_logo.svg","Components/Footer.js","Components/Box.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","class","src","instalogo","alt","onClick","window","open","facebooklogo","width","height","slacklogo","maillogo","Box","props","title","desc","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,uMC8B5BC,MAvBf,WACI,OACI,4BAAQC,MAAM,uFACV,yBAAKA,MAAM,mCACP,yBAAKA,MAAM,sDACP,yBAAKC,IAAKC,IAAWC,IAAI,OAAOC,QAAS,kBAAMC,OAAOC,KAAK,mDAE/D,yBAAKN,MAAM,+DACP,yBAAKC,IAAKM,IAAcJ,IAAI,OAAOK,MAAM,OAAOC,OAAO,OAAOL,QAAS,kBAAMC,OAAOC,KAAK,2CAE7F,yBAAKN,MAAM,0DACP,yBAAKC,IAAKS,IAAWP,IAAI,OAAOC,QAAS,kBAAMC,OAAOC,KAAK,uCAE/D,yBAAKN,MAAM,0DACP,yBAAKC,IAAKU,IAAUR,IAAI,OAAOK,MAAM,OAAOC,OAAO,WAZ/D,sCCcOG,MArBf,SAAcC,GAIV,OACI,yBAAKb,MAAQ,8EAET,uBAAGA,MAAQ,+GAENa,EAAMC,OAIX,uBAAGd,MAAQ,6EACNa,EAAME,QCKRC,MAhBf,WAQE,OACE,6BACE,kBAAC,EAAD,CAAKF,MARI,iBAQWC,KAPb,oYAQP,kBAAC,EAAD,QCJcE,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b61030f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/insta_logo.61103f2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/slack_logo.e29b89c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/fb_logo.5d6ea38a.png\";","module.exports = __webpack_public_path__ + \"static/media/mail_logo.e75a0390.svg\";","import React from 'react'\nimport instalogo from '../insta_logo.svg';\nimport slacklogo from '../slack_logo.svg';\nimport facebooklogo from '../fb_logo.png';\nimport maillogo from '../mail_logo.svg';\n\n\nfunction Footer (){\n    return (\n        <footer class=\"bg-gray-200 text-center text-s text-gray-700 p-2 absolute bottom-0 w-full font-sans\">\n            <div class=\"flex justify-center bg-gray-200\">\n                <div class=\"inline-block text-gray-700 text-center bg-gray-200\">\n                    <img src={instalogo} alt=\"Logo\" onClick={() => window.open('https://www.instagram.com/ricecsclub/?hl=en')}/>\n                </div>\n                <div class=\"inline-block text-gray-700 text-center bg-gray-200 px-1 m-1\">\n                    <img src={facebooklogo} alt=\"Logo\" width=\"33px\" height=\"33px\" onClick={() => window.open('https://www.facebook.com/ricecsclub')}/> \n                </div> \n                <div class=\"inline-block text-gray-700 text-center bg-gray-200 m-2\">\n                    <img src={slacklogo} alt=\"Logo\" onClick={() => window.open('https://ricecs.slack.com/signup')}/>\n                </div>\n                <div class=\"inline-block text-gray-700 text-center bg-gray-200 m-2\">\n                    <img src={maillogo} alt=\"Logo\" width=\"37px\" height=\"35px\"/>\n                </div>\n            </div>\n            \n            &copy; Rice University CS Club 2020\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nfunction Box (props){\n    // accepts props for title and description\n        \n    \n    return (\n        <div class = \"flex group bg-blue-500 hover:bg-white h-64 ml-20 my-20 max-w-lg shadow ...\">\n\n            <p class = \"object-none object-center font-bold text-white opacity-50 bg-orange-300 group-hover:opacity-0 absolute b...\">\n                \n                {props.title}\n                \n            </p>\n\n            <p class = \"text-center text-gray-700 opacity-100 group-hover:opacity-100 top-50  ...\">\n                {props.desc}\n            </p>\n\n        </div>\n    )\n}\n\nexport default Box\n\n//grid grid-rows-1 grid-flow-col gap-4\n//grid row-start-1 row-end-2 \n","import React from 'react';\nimport Footer from './Components/Footer'\nimport Box from './Components/Box'\n\n\nfunction App() {\n\n  const name = \"Resume Reviews\"\n  const blurb = `Bring your resumes and get feedback and advice from upper classmen and an invited experienced \n  professional who has extensive experience reviewing and evaluating resumes. We will discuss \n  resume content and formatting tips and provide constructive criticism in an informal setting.  \n  A resume review session is usually held during the week before the university career expo.` \n\n  return (\n    <div>\n      <Box title = {name} desc = {blurb}/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}